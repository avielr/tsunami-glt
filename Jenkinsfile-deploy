properties([
    buildDiscarder(
      logRotator(numToKeepStr: '50')),
    parameters([
    string(
        // https://www.checkmarx.com/blog/15-vulnerable-sites-to-legally-practice-your-hacking-skills/
        //          ['www.itsecgames.com','www.damnvulnerableiosapp.com','www.try2hack.nl']
        defaultValue: '\'184.168.131.241\',\'184.168.139.128\',\'185.17.73.13\'', 
        description: '''Enter URL / IP to scan in the following format \'\',\'\',\'\'''', 
        name: 'serversToScan', trim: true
    ), 
    string(
        defaultValue: 'test@test.com', 
        description: '', 
        name: 'E-Mail address', 
        trim: true
    ),
    string(
        defaultValue: 'avl-glt-reports', 
        description: 'S3 Bucket name', 
        name: 'S3_BUCKET'
    )
    ]), 
    pipelineTriggers([
    upstream('1_Build_glt_tsunami')
    ])
])

def S3_BUCKET = params.S3_BUCKET

def stepsForParallel = params.serversToScan.split(',')collectEntries {
 ["${it}" : transformIntoStep(it)]
}

parallel stepsForParallel

def transformIntoStep(inputString) {
  return {
    podTemplate(yaml: """
    apiVersion: v1
    kind: Pod
    spec:
      containers:
      - name: tsunami
        image: aviel1988/tsunami-glt
        imagePullPolicy: IfNotPresent
        command:
        - cat
        tty: true
        volumeMounts:
        - mountPath: '/workspace'
          name: sharedworkspace
      - name: aws-cli
        image: amazon/aws-cli
        imagePullPolicy: IfNotPresent
        command: ["cat"]
        tty: true
        volumeMounts:
        - mountPath: '/workspace'
          name: sharedworkspace
      volumes:
      - name: sharedworkspace
        emptyDir: {}
    """
    ){
      node(POD_LABEL) {
        stage("Scan"){
            env.inputString = inputString
            container('tsunami'){
                string filename = "/workspace/tsunami-output.json"
                timeout(time: 2700, unit: 'SECONDS'){ // Full Tsunami scan took 36.82 min.
                sh "cd /usr/tsunami; java -cp \"tsunami.jar:plugins/nmap_port_scanner-0.0.1-SNAPSHOT.jar\" -Dtsunami.config.location=/usr/tsunami/tsunami.yaml com.google.tsunami.main.cli.TsunamiCli --ip-v4-target=${inputString} --scan-results-local-output-format=JSON --scan-results-local-output-filename=/workspace/tsunami-output.json"
                }
            }
        }

        stage("Report"){
          env.S3_BUCKET = params.S3_BUCKET
          env.inputString = inputString
          container('aws-cli'){
            withAWS(credentials: 'AWS_CREDS', region: 'eu-west-2') {
                FILE_IP = sh(returnStdout: true, script: "echo ${inputString} |tr '.' '-'").trim()
                withEnv(["FILE_IP=${FILE_IP}" , "S3_BUCKET=${env.S3_BUCKET}"]) {
                    sh 'env'
                    sh 'aws s3 cp --acl public-read /workspace/tsunami-output.json s3://${S3_BUCKET}/${BUILD_ID}_${FILE_IP}_tsunami_output.json'
                }
            }
            echo "URL: https://${S3_BUCKET}.s3.eu-west-2.amazonaws.com/${BUILD_ID}_${FILE_IP}_tsunami_output.json"
            URL_PATH = sh(returnStdout: true, script: "echo https://${S3_BUCKET}.s3.eu-west-2.amazonaws.com/${BUILD_ID}_${FILE_IP}_tsunami_output.json")
            echo "URL_PATH = ${URL_PATH}"
            mail  to: 'aviel1988@gmail.com', body: 'Scan results - ${URL_PATH}', subject: 'Build #${BUILD_ID} - Scan results for IP ${inputString}'
          }
        }
      }
    }
  }
}
